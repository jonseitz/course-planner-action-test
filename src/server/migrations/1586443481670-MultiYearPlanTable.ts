import { MigrationInterface, QueryRunner } from 'typeorm';

export class MultiYearPlanTable1586443481670 implements MigrationInterface {
  public name = 'MultiYearPlanTable1586443481670'

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query('DELETE FROM "typeorm_metadata" WHERE "type" = \'VIEW\' AND "schema" = $1 AND "name" = $2', ['public', 'MeetingListingView']);
    await queryRunner.query('DROP VIEW "MeetingListingView"', undefined);
    await queryRunner.query('DELETE FROM "typeorm_metadata" WHERE "type" = \'VIEW\' AND "schema" = $1 AND "name" = $2', ['public', 'CourseInstanceListingView']);
    await queryRunner.query('DROP VIEW "CourseInstanceListingView"', undefined);
    await queryRunner.query('ALTER TABLE "course" DROP CONSTRAINT "FK_d43d51e738645bda6c1afca405b"', undefined);
    await queryRunner.query('ALTER TABLE "course" ALTER COLUMN "areaId" SET NOT NULL', undefined);
    await queryRunner.query('ALTER TABLE "course" ADD CONSTRAINT "FK_d43d51e738645bda6c1afca405b" FOREIGN KEY ("areaId") REFERENCES "area"("id") ON DELETE NO ACTION ON UPDATE NO ACTION', undefined);
    await queryRunner.query('CREATE VIEW "CourseInstanceListingView" AS SELECT "ci"."id" AS "id", "ci"."offered" AS "offered", "s"."term" AS "term", ci."courseId" AS "courseId", ci."preEnrollment" AS "preEnrollment", ci."studyCardEnrollment" AS "studyCardEnrollment", ci."actualEnrollment" AS "actualEnrollment", s."academicYear" AS "calendarYear" FROM "course_instance" "ci" LEFT JOIN "semester" "s" ON "s"."id" = ci."semesterId"', undefined);
    await queryRunner.query('INSERT INTO "typeorm_metadata"("type", "schema", "name", "value") VALUES ($1, $2, $3, $4)', ['VIEW', 'public', 'CourseInstanceListingView', 'SELECT "ci"."id" AS "id", "ci"."offered" AS "offered", "s"."term" AS "term", ci."courseId" AS "courseId", ci."preEnrollment" AS "preEnrollment", ci."studyCardEnrollment" AS "studyCardEnrollment", ci."actualEnrollment" AS "actualEnrollment", s."academicYear" AS "calendarYear" FROM "course_instance" "ci" LEFT JOIN "semester" "s" ON "s"."id" = ci."semesterId"']);
    await queryRunner.query('CREATE VIEW "MeetingListingView" AS SELECT "m"."id" AS "id", "m"."day" AS "day", m."courseInstanceId" AS "courseInstanceId", TO_CHAR(CAST (m."startTime" AS TIME), \'HH12:MI AM\') AS "startTime", TO_CHAR(CAST (m."endTime" AS TIME), \'HH12:MI AM\') AS "endTime", m."roomId" AS "roomId" FROM "meeting" "m"', undefined);
    await queryRunner.query('INSERT INTO "typeorm_metadata"("type", "schema", "name", "value") VALUES ($1, $2, $3, $4)', ['VIEW', 'public', 'MeetingListingView', 'SELECT "m"."id" AS "id", "m"."day" AS "day", m."courseInstanceId" AS "courseInstanceId", TO_CHAR(CAST (m."startTime" AS TIME), \'HH12:MI AM\') AS "startTime", TO_CHAR(CAST (m."endTime" AS TIME), \'HH12:MI AM\') AS "endTime", m."roomId" AS "roomId" FROM "meeting" "m"']);
    await queryRunner.query('CREATE VIEW "MultiYearPlanInstanceView" AS SELECT "ci"."id" AS "id", "s"."term" AS "term", "instructors"."id" AS "instructors_id", "instructors"."displayName" AS "instructors_displayName", ci.courseId AS "courseId", s."academicYear" AS "calendarYear" FROM "course_instance" "ci" LEFT JOIN "semester" "s" ON "s"."id" = ci."semesterId"  LEFT JOIN "FacultyListingView" "instructors" ON instructors.courseInstanceId = "ci"."id"', undefined);
    await queryRunner.query('INSERT INTO "typeorm_metadata"("type", "schema", "name", "value") VALUES ($1, $2, $3, $4)', ['VIEW', 'public', 'MultiYearPlanInstanceView', 'SELECT "ci"."id" AS "id", "s"."term" AS "term", "instructors"."id" AS "instructors_id", "instructors"."displayName" AS "instructors_displayName", ci.courseId AS "courseId", s."academicYear" AS "calendarYear" FROM "course_instance" "ci" LEFT JOIN "semester" "s" ON "s"."id" = ci."semesterId"  LEFT JOIN "FacultyListingView" "instructors" ON instructors.courseInstanceId = "ci"."id"']);
    await queryRunner.query('CREATE VIEW "MultiYearPlanView" AS SELECT "c"."id" AS "id", "c"."title" AS "title", "a"."name" AS "area", "instances"."id" AS "instances_id", "instances"."courseId" AS "instances_courseId", "instances"."calendarYear" AS "calendarYear", "instances"."term" AS "instances_term", "instances"."faculty" AS "instances_faculty", "instances"."calendarYear" AS "calendarYear", CONCAT_WS(\' \', "c"."prefix", "c"."number") AS "catalogNumber", "instances"."calendarYear" AS "calendarYear" FROM "course" "c" LEFT JOIN "area" "a" ON c."areaId" = "a"."id"  LEFT JOIN "MultiYearPlanInstanceView" "instances" ON "c"."id" = "instances"."courseId"', undefined);
    await queryRunner.query('INSERT INTO "typeorm_metadata"("type", "schema", "name", "value") VALUES ($1, $2, $3, $4)', ['VIEW', 'public', 'MultiYearPlanView', 'SELECT "c"."id" AS "id", "c"."title" AS "title", "a"."name" AS "area", "instances"."id" AS "instances_id", "instances"."courseId" AS "instances_courseId", "instances"."calendarYear" AS "calendarYear", "instances"."term" AS "instances_term", "instances"."faculty" AS "instances_faculty", "instances"."calendarYear" AS "calendarYear", CONCAT_WS(\' \', "c"."prefix", "c"."number") AS "catalogNumber", "instances"."calendarYear" AS "calendarYear" FROM "course" "c" LEFT JOIN "area" "a" ON c."areaId" = "a"."id"  LEFT JOIN "MultiYearPlanInstanceView" "instances" ON "c"."id" = "instances"."courseId"']);
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query('DELETE FROM "typeorm_metadata" WHERE "type" = \'VIEW\' AND "schema" = $1 AND "name" = $2', ['public', 'MultiYearPlanView']);
    await queryRunner.query('DROP VIEW "MultiYearPlanView"', undefined);
    await queryRunner.query('DELETE FROM "typeorm_metadata" WHERE "type" = \'VIEW\' AND "schema" = $1 AND "name" = $2', ['public', 'MultiYearPlanInstanceView']);
    await queryRunner.query('DROP VIEW "MultiYearPlanInstanceView"', undefined);
    await queryRunner.query('DELETE FROM "typeorm_metadata" WHERE "type" = \'VIEW\' AND "schema" = $1 AND "name" = $2', ['public', 'MeetingListingView']);
    await queryRunner.query('DROP VIEW "MeetingListingView"', undefined);
    await queryRunner.query('DELETE FROM "typeorm_metadata" WHERE "type" = \'VIEW\' AND "schema" = $1 AND "name" = $2', ['public', 'CourseInstanceListingView']);
    await queryRunner.query('DROP VIEW "CourseInstanceListingView"', undefined);
    await queryRunner.query('ALTER TABLE "course" DROP CONSTRAINT "FK_d43d51e738645bda6c1afca405b"', undefined);
    await queryRunner.query('ALTER TABLE "course" ALTER COLUMN "areaId" DROP NOT NULL', undefined);
    await queryRunner.query('ALTER TABLE "course" ADD CONSTRAINT "FK_d43d51e738645bda6c1afca405b" FOREIGN KEY ("areaId") REFERENCES "area"("id") ON DELETE NO ACTION ON UPDATE NO ACTION', undefined);
    await queryRunner.query('CREATE VIEW "CourseInstanceListingView" AS SELECT "ci"."id" AS "id", "ci"."offered" AS "offered", "s"."term" AS "term", ci."courseId" AS "courseId", ci."preEnrollment" AS "preEnrollment", ci."studyCardEnrollment" AS "studyCardEnrollment", ci."actualEnrollment" AS "actualEnrollment", s."academicYear" AS "year" FROM "course_instance" "ci" LEFT JOIN "semester" "s" ON "s"."id" = ci."semesterId"', undefined);
    await queryRunner.query('INSERT INTO "typeorm_metadata"("type", "schema", "name", "value") VALUES ($1, $2, $3, $4)', ['VIEW', 'public', 'CourseInstanceListingView', 'SELECT "ci"."id" AS "id", "ci"."offered" AS "offered", "s"."term" AS "term", ci."courseId" AS "courseId", ci."preEnrollment" AS "preEnrollment", ci."studyCardEnrollment" AS "studyCardEnrollment", ci."actualEnrollment" AS "actualEnrollment", s."academicYear" AS "year" FROM "course_instance" "ci" LEFT JOIN "semester" "s" ON "s"."id" = ci."semesterId"']);
    await queryRunner.query('CREATE VIEW "MeetingListingView" AS SELECT "m"."id" AS "id", "m"."day" AS "day", m."courseInstanceId" AS "courseInstanceId", CONCAT_WS(\':\', EXTRACT(HOUR FROM m."startTime"), EXTRACT(MINUTE FROM m."startTime")) AS "startTime", CONCAT_WS(\':\', EXTRACT(HOUR FROM m."endTime"), EXTRACT(MINUTE FROM m."endTime")) AS "endTime", m."roomId" AS "roomId" FROM "meeting" "m"', undefined);
    await queryRunner.query('INSERT INTO "typeorm_metadata"("type", "schema", "name", "value") VALUES ($1, $2, $3, $4)', ['VIEW', 'public', 'MeetingListingView', 'SELECT "m"."id" AS "id", "m"."day" AS "day", m."courseInstanceId" AS "courseInstanceId", CONCAT_WS(\':\', EXTRACT(HOUR FROM m."startTime"), EXTRACT(MINUTE FROM m."startTime")) AS "startTime", CONCAT_WS(\':\', EXTRACT(HOUR FROM m."endTime"), EXTRACT(MINUTE FROM m."endTime")) AS "endTime", m."roomId" AS "roomId" FROM "meeting" "m"']);
  }
}
